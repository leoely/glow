import { describe, expect, test, } from '@jest/globals';
import HighLight from '~/class/HighLight';
import CtfLexer from '~/class/CtfLexer';

describe('[class] CtfLexer', () => {
  test('CtfLexer parse result should be correct.', () => {
    const highLight = new HighLight();
    highLight.addLexer(CtfLexer);
    expect(JSON.stringify(highLight.parse(`
    (+) bold,red,underline: demo text1 (+) bold, green, underline: demo text2

    [+] bold, gray, underline, dim:
      | This is example text is explain ctf,
      | "+" that is mean add a new text or passage.
      | bold, red and so on is text or passage formate.
    `))).toMatch('[{\"type\":\"\\n\"},{\"type\":\" \"},{\"type\":\" \"},{\"type\":\" \"},{\"type\":\" \"},{\"type\":\"parenthese\",\"elem\":\"(\"},{\"type\":\"plus\",\"elem\":\"+\"},{\"type\":\"parenthese\",\"elem\":\")\"},{\"type\":\" \"},{\"type\":\"formate\",\"elem\":\"bold\"},{\"type\":\"comma\",\"elem\":\",\"},{\"type\":\"formate\",\"elem\":\"red\"},{\"type\":\"comma\",\"elem\":\",\"},{\"type\":\"formate\",\"elem\":\"underline\"},{\"type\":\"colon\",\"elem\":\":\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"demo\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"text1\"},{\"type\":\" \"},{\"type\":\"parenthese\",\"elem\":\"(\"},{\"type\":\"plus\",\"elem\":\"+\"},{\"type\":\"parenthese\",\"elem\":\")\"},{\"type\":\" \"},{\"type\":\"formate\",\"elem\":\"bold\"},{\"type\":\"comma\",\"elem\":\",\"},{\"type\":\" \"},{\"type\":\"formate\",\"elem\":\"green\"},{\"type\":\"comma\",\"elem\":\",\"},{\"type\":\" \"},{\"type\":\"formate\",\"elem\":\"underline\"},{\"type\":\"colon\",\"elem\":\":\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"demo\"},{\"type\":\" \"},{\"type\":\"\\n\"},{\"type\":\"\\n\"},{\"type\":\"text\",\"elem\":\"text2\\n\\n\"},{\"type\":\" \"},{\"type\":\" \"},{\"type\":\" \"},{\"type\":\" \"},{\"type\":\"squareParenthese\",\"elem\":\"[\"},{\"type\":\"plus\",\"elem\":\"+\"},{\"type\":\"squareParenthese\",\"elem\":\"]\"},{\"type\":\" \"},{\"type\":\"formate\",\"elem\":\"bold\"},{\"type\":\"comma\",\"elem\":\",\"},{\"type\":\" \"},{\"type\":\"formate\",\"elem\":\"gray\"},{\"type\":\"comma\",\"elem\":\",\"},{\"type\":\" \"},{\"type\":\"formate\",\"elem\":\"underline\"},{\"type\":\"comma\",\"elem\":\",\"},{\"type\":\" \"},{\"type\":\"formate\",\"elem\":\"dim\"},{\"type\":\"colon\",\"elem\":\":\"},{\"type\":\"\\n\"},{\"type\":\" \"},{\"type\":\" \"},{\"type\":\" \"},{\"type\":\" \"},{\"type\":\" \"},{\"type\":\" \"},{\"type\":\"dividing\",\"elem\":\"|\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"This\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"is\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"example\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"text\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"is\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"explain\"},{\"type\":\" \"},{\"type\":\"formate\",\"elem\":\"ctf\"},{\"type\":\"comma\",\"elem\":\",\"},{\"type\":\"\\n\"},{\"type\":\" \"},{\"type\":\" \"},{\"type\":\" \"},{\"type\":\" \"},{\"type\":\" \"},{\"type\":\" \"},{\"type\":\"dividing\",\"elem\":\"|\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"\\\"+\\\"\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"that\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"is\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"mean\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"add\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"a\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"new\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"text\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"or\"},{\"type\":\" \"},{\"type\":\"\\n\"},{\"type\":\"text\",\"elem\":\"passage.\\n\"},{\"type\":\" \"},{\"type\":\" \"},{\"type\":\" \"},{\"type\":\" \"},{\"type\":\" \"},{\"type\":\" \"},{\"type\":\"dividing\",\"elem\":\"|\"},{\"type\":\" \"},{\"type\":\"formate\",\"elem\":\"bold\"},{\"type\":\"comma\",\"elem\":\",\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"red\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"and\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"so\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"on\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"is\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"text\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"or\"},{\"type\":\" \"},{\"type\":\"text\",\"elem\":\"passage\"},{\"type\":\" \"},{\"type\":\"\\n\"},{\"type\":\"text\",\"elem\":\"formate.\\n\"},{\"type\":\" \"},{\"type\":\" \"},{\"type\":\" \"},{\"type\":\" \"}]');
  });
});
